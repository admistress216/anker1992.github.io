[{"title":"开发文档模板","date":"2018-07-05T11:29:01.000Z","path":"2018/07/05/开发文档模板/","text":"前言: 本模板旨于总结各开发文档流程步骤,集中各文档的优点,以便后期写出高效简洁的文档. 一. h5_maker模板开发文档1.前言 原文: 本文档主要是对H5后台模板的实现基本说明。知识点: 完成文档作用的基本说明 2.语言使用及框架架构 原文: 本H5maker 项目后端使用 node.js +express 框架实现，使用MongoDB存储数据,node.js 使用Mongoose 来操作MongoDB 操作。前端：vue2.0 + vue-router + vuex + axios + Element ui知识点: 主要从前端,后端,数据库角度分析 3.模板总体设计 知识点: 主要描述设计思路,分为两种形式结合使用,分步骤以文字的形式描述;用viso或其他uml图描述 4.数据库设计 原文: 数据库设计主要有三个文档结构，分别为用户文档结构，文件文档结构和模板文档结构。知识点: 对各数据表整体描述,接下来单独对每个表以表格的形式对字段分析 属性名称 类型 是否为空 default 备注 name String not null 用户名称 role String not null user 用户角色，user普通用户，admin: 管理员 5.接口设计 用户登录接口：POST : /auth/login参数说明：请求的参数为 req 和 res, 其中req 中属性如下 名称 类型 是不必须 说明 req.body.loginId String yes req.body.password String yes 接口返回数据格式：{“token”:”eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1YjIzMWM2NWE3OWYzYTQ0NzE5Njk1ZGMiLCJpYXQiOjE1MzA2ODczNDksImV4cCI6MTUzMDcwNTM0OX0.Ise1sfVMDCB-Kbun1eBKjBI_MkTJZNu9BFWtNLibRvU”} 6.前端开发规范7.页面设计8.初步选用模板","tags":[]},{"title":"yii2总结","date":"2018-07-05T07:56:58.000Z","path":"2018/07/05/yii2总结/","text":"1.应用的静态结构图和目录结构 静态结构图目录结构 2.基础操作2.1控制器示例1234567891011namespace app\\controllers;use yii\\web\\Controller;class SiteController extends Controller&#123; public function actionIndex()&#123; $test = \"hah\"; $this-&gt;render(\"index\", ['test' =&gt; $test]); &#125;&#125; 2.2模型示例123456789101112131415161718192021222324252627282930313233namespace app\\models;use yii\\base\\Model;class EntryForm extends Model&#123; public $name; public $email; /** *设定规则 *safe:不验证,required:必须验证,compare:对比,in:范围验证, *double:双精度验证,email:邮箱验证,integer:数字验证,match:正则验证,string:字符串验证, *unique:唯一验证,capture:验证码(这两个都需要数据库) */ public function rules() &#123; return [ [['name', 'email'], 'required'], ['email', 'email'] ]; &#125; /** * 设置标签 */ public function attributeLabels() &#123; return [ 'name' =&gt; 'Your Name', 'email' =&gt; 'Your Email' ]; &#125;&#125; 2.3视图关键点讲解2.3.1布局默认情况下,@app/views/layouts/main.php文件中放置公共布局文件,在公共文件中$content用于调用控制器中render方法渲染内容视图后的结果. 2.3.2视图和控制器变量连结通过extract方法分配变量. 2.4数据库示例3.架构图","tags":[]},{"title":"马克飞象","date":"2018-07-05T06:55:33.000Z","path":"2018/07/05/马克飞象/","text":"欢迎使用马克飞象马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： 功能丰富 ：支持高亮代码块、LaTeX 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手； 得心应手 ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web； 深度整合 ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。 Markdown简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科 正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按Ctrl + /查看帮助。 代码块12345678910@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' 表格 Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234 复选框使用 - [ ] 和 - [x] 语法可以创建复选框，实现 todo-list 等功能。例如： 已完成事项 待办事项1 待办事项2 注意：目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在马克飞象中修改 Markdown 原文才可生效。下个版本将会全面支持。 印象笔记相关笔记标题马克飞象会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 欢迎使用马克飞象。 快捷编辑保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到马克飞象中打开并编辑该笔记。 注意：目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。 数据同步马克飞象通过将Markdown原文以隐藏内容保存在笔记中的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。 隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。 离线存储马克飞象使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过文档管理打开。 注意：虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，请务必经常及时同步到印象笔记。 编辑器相关设置右侧系统菜单（快捷键Ctrl + M）的设置中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。 快捷键帮助 Ctrl + /同步文档 Ctrl + S创建文档 Ctrl + Alt + N最大化编辑器 Ctrl + Enter预览文档 Ctrl + Alt + Enter文档管理 Ctrl + O系统菜单 Ctrl + M 加粗 Ctrl + B插入图片 Ctrl + G插入链接 Ctrl + L提升标题 Ctrl + H 关于收费马克飞象为新用户提供 10 天的试用期，试用期过后需要续费才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。 反馈与建议 微博：@马克飞象，@GGock 邮箱：&#x68;&#117;&#115;&#116;&#103;&#111;&#x63;&#107;&#x40;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;","tags":[]},{"title":"文档示例","date":"2018-07-05T06:41:19.000Z","path":"2018/07/05/文档示例/","text":"示例文档 版本 更新日志 日期 作者 1.0 初始版 20170301 Demi 技术实现接口改造(syncTruckFromGSP) 拆机逻辑 换机逻辑(略) GSP回传异常数(syncTruckExceptionCallback)增加回传参数 orgroot、orgcode、serv_type、old_gpsno、old_truckid、old_truckno 拆机 old_gpsno、old_truck_id、old_truck_no必传 code = 2001拆机单数据不完整，流程终止 设备在G7S不存在 code = 2002设备xx在g7s不存在,流程终止(请手动同步该设备后重新提交) 车辆不存在 code = 2003车辆xx不存在，流程终止 绑定关系不正确 code = 2004车牌号xx与设备xx不存在绑定关系 移机 old_gpsno、old_truck_id、old_truck_no、truck_no必传 code = 3001移机单数据不完整，流程终止 验证车牌 code = 3002目标车牌号不符合规则，流程终止 旧车辆与旧设备绑定关系 code = 3003设备xx与车牌号xx绑定关系异常，流程终止 新车辆与设备关系 code = 3004目标车辆XX绑定关系异常，流程终止 G7S建车失败 code = 3005建车失败：xxx 设备机构与车辆机构不一致(分发失败) code = 3006设备xx与车辆xx所属机构不一致，流程终止 换机 gpsno(installing_gpsno)、old_gpsno、old_truck_id、old_truck_no必传 code = 4001换机单数据不完整，流程终止 新设备在G7S不存在 code = 4002新设备xx在g7s不存在,流程终止(请手动同步该设备后重新提交) 新设备已经绑定了车辆 code = 4003新设备xx存在绑定关系，无法进行绑定 车辆在G7S不存在 code = 4004换机单车牌号错误，流程终止 车辆与旧设备绑定关系异常 code = 4005车牌号xx与设备xx绑定关系异常，流程终止 新设备与车辆机构不一致(分发失败) code = 4006新设备XX与车辆XX所属机构不一致，流程终止 不能垮顶级机构换机 code = 4007新设备机构xx与当前机构xx不一致，流程终止(不能垮顶级机构换机) 绑定、解绑 解绑失败 code = 400解绑失败：XXXX 绑定失败 code = 401绑定失败：XXXX 操作成功 code = 0绑定成功 数据库改造 增加字段 1234ALTER TABLE `truck_truck_exp` ADD `orgcode` VARCHAR (30) AFTER `orgroot`;ALTER TABLE `truck_truck_exp` ADD `params` text COMMENT &apos;参数&apos; AFTER `description`;ALTER TABLE `truck_truck_exp` ADD `type` int(6) NOT NULL COMMENT &apos;工单类型:2(拆机) 3(移机) 4(换机)&apos; AFTER `code`;ALTER TABLE `cat_truck`.`truck_truck_exp` ADD INDEX USING BTREE (`type`) comment &apos;&apos;; 自动脚本 删除120天以前强绑定异常数据(每天一次) 10 0 * * * http://*.truck.g7s.chinawayltd.com/service.php?method=truck.cronlist.job_deleteOldTruckExp &gt; /dev/null 2&gt;&amp;1 车辆同步(每分钟一次) */1 * * * * http://*.truck.g7s.chinawayltd.com/service.php?method=truck.cronlist.syncTruckFromGsp &gt; /dev/null 2&gt;&amp;1","tags":[]},{"title":"jira破解","date":"2018-07-05T03:36:38.000Z","path":"2018/07/05/jira破解/","text":"注:软件包在微云 1. 安装java环境12345678910# 安装jdkrpm -ivh jdk-8u131-linux-x64.rpm# 检测是否安装成功java -version# 出现以下信息代表安装成功# java version \"1.8.0_131\"# Java(TM) SE Runtime Environment (build 1.8.0_131-b11)# Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode) 2. 安装mysql5.6 安装教程见github12# 注意: 安装完成后创建jira数据库create database jira default character set 'utf8' collate 'utf8_bin'; 3. 下载jira1234# 解压tar zxvf atlassian-jira-software-7.3.6.tar.gz# 移动mv atlassian-jira-software-7.3.6-standalone /usr/local/ 4. 配置jira_home1234567mkdir /var/jira vi ~/.bash_profile文件最后一行增加 export JIRA_HOME=/var/jira同时在终端也输入以下命令export JIRA_HOME=/var/jira 5. 给jira安装mysql驱动com.mysql.jdbc.Driver123tar zxvf mysql-connector-java-5.1.42.tar.gz将mysql-connector-java-5.1.42-bin.jar复制到jira的安装目录下的confluence/WEB-INF/lib/目录cp mysql-connector-java-5.1.42/mysql-connector-java-5.1.42-bin.jar /usr/local/atlassian-jira-software-7.3.6-standalone/atlassian-jira/WEB-INF/lib/ 6. 启动jira123cd /usr/local/atlassian-jira-software-7.3.6-standalone/bin./start-jira.sh启动jira,一般需要2分钟才能启动。 7. jira配置license 通过网址访问jira,自定义配置. 8. 破解jira12345unzip jira7.3.zip# 将包中的atlassian-extras-3.2.jar 复制到 usr/local/atlassian-jira-software-7.3.6-standalone/atlassian-jira/WEB-INF/lib/ 替换原有的包# 重启jira/usr/local/atlassian-jira-software-7.3.6-standalone/bin/stop-jira.sh/usr/local/atlassian-jira-software-7.3.6-standalone/bin/start-jira.sh 9. nginx反向代理1234567891011121314server &#123; listen 80; server_name jira.newscctv.net; location /&#123; proxy_set_header X-Forwarded-Host $host; proxy_set_header X-Forwarded-Server $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://192.168.201.35:8080; # 修改成jira服务器的IP client_max_body_size 10M; &#125;&#125;","tags":[]},{"title":"uml教程","date":"2018-07-04T06:17:59.000Z","path":"2018/07/04/uml教程/","text":"1.uml概述 UML(Unified Modeling Language)概念: 统一建模语言,是一种编制软件蓝图的标准化语言; UML为什么很重要: 写软件就像建筑一样,系统越复杂,完成编写与架构任务的工程师间的交流也就越重要,uml提供了美工,设计师和程序猿之间的通用语言; 2.uml模型和特点uml模型主要由三部分构成: 事物(Things): uml构成的基本元素 关系(Relationships): 关系将事物紧密联系在一起 图(Diagrams): 事物与关系的可视化表现 uml特点: 面向对象 可视化 独立于过程 独立于程序设计 容易掌握 3.PlantUml语法3.1 官方文档地址3.2 基础 @startuml,@enduml开始结束标记,表示uml解析的部分 start,end表示图示的开始和结束 :Hello world;活动标签(activity label)以冒号开始，以分号结束。活动默认安装它们定义的顺序就行连接。 4.PlatUml分类及例子4.1 时序图123456@startumlAlice -&gt; Bob: Authentication RequestBob --&gt; Alice: Authentication ResponseAlice -&gt; Bob: Another authentication RequestAlice &lt;-- Bob: another authentication Response@enduml 事物: actor boundary control entity database collections 说明:第二选项为名称,可以通过as缩写,第三项为排序,第四项为颜色指定使用非字母符号,如:(),\\n等,需用””来包含 1234567891011121314151617181920@startumlactor Foo1 #blueboundary Foo2 order 50control Foo3 order 60entity Foo4database Foo5collections Foo6participant Aliceparticipant \"I have a really\\nlong name\" as L order 80 #99FF99Foo1 -&gt; Foo2 : To boundaryFoo1 -&gt; Foo3 : To controlFoo1 -&gt; Foo4 : To entityFoo1 -&gt; Foo5 : To databaseFoo1 -&gt; Foo6 : To collectionsFoo1 -&gt; Alice : To participantFoo1 --&gt; L : To abbreviationL -&gt; L : This is a signal to self.\\nIt also demonstrates\\nmultiline \\ntext@enduml 改变箭头的方式:表示一条丢失的消息：末尾加 x让箭头只有上半部分或者下半部分：将&lt;和&gt;替换成\\或者 /细箭头：将箭头标记写两次 (如 &gt;&gt; 或 //)虚线箭头：用 – 替代 -箭头末尾加圈：-&gt;o双向箭头： 123456789101112131415@startumlBob -&gt;x AliceBob -&gt; AliceBob -&gt;&gt; AliceBob -\\ AliceBob \\\\- AliceBob //-- AliceBob -&gt;o AliceBob o\\\\-- AliceBob &lt;-&gt; AliceBob &lt;-&gt;o Alice@enduml 编号:autonumber ‘start’ ‘increment’’’可以指定编号格式,见官方文档 1234567891011121314@startumlautonumberBob -&gt; Alice : Authentication RequestBob &lt;- Alice : Authentication Responseautonumber 15Bob -&gt; Alice : Another authentication RequestBob &lt;- Alice : Another authentication Responseautonumber 40 10Bob -&gt; Alice : Yet another authentication RequestBob &lt;- Alice : Yet another authentication Response@enduml (…….未完待续……) 4.2 活动图 活动标签以冒号(:)开始分号(;)结束可以使用关键字start和stop表示图示的开始和结束 12345@startuml :Hello world;:This is on defined onseveral **lines**;@enduml 1234567891011121314@startumlstart:Hello world;:This is on defined onseveral **lines**;stopstart:Hello world;:This is on defined onseveral **lines**;end@enduml 在图示中可以使用关键字if，then和else设置分支测试。标注文字则放在括号中也可以使用关键字elseif设置多个分支测试 12345678910111213141516171819202122232425262728@startumlstartif (Graphviz installed?) then (yes) :process all\\ndiagrams;else (no) :process only __sequence__ and __activity__ diagrams;endifstopstartif (condition A) then (yes) :Text 1;elseif (condition B) then (yes) :Text 2; stopelseif (condition C) then (yes) :Text 3;elseif (condition D) then (yes) :Text 4;else (nothing) :Text else;endifstop@enduml 重复循环:使用关键字repeat和repeatwhile进行重复循环 1234567891011@startumlstartrepeat :read data; :generate diagrams;repeat while (more data?) is (not empty)stop@enduml while循环:使用关键字while和endwhile进行while循环可以在关键字endwhile后添加标注，还有一种方式是使用关键字is 12345678910111213141516@startumlstartwhile (data available?) :read data; :generate diagrams;endwhilestopwhile (check filesize?) is (not empty) :read file;endwhile (empty) :close file;@enduml 并行处理可以使用关键字fork，fork again和end fork表示并行处理 12345678910111213141516@startumlstartif (multiprocessor?) then (yes) fork :Treatment 1; fork again :Treatment 2; end forkelse (monoproc) :Treatment 1; :Treatment 2;endif@enduml","tags":[]},{"title":"mysql问答","date":"2018-06-28T02:12:46.000Z","path":"2018/06/28/mysql问答/","text":"mysql中emoji表情,不常用的汉子,任何新增的unicode怎么保存?答: 选用utf8mb4编码(4字节宽字符)格式而不是用utf编码.","tags":[]},{"title":"phpstorm","date":"2018-06-27T02:11:38.000Z","path":"2018/06/27/phpstorm/","text":"1. 目的记录和练习的目的,旨在提升工作效率,加快开发节奏与流畅度. 2. 常用快捷键编辑快捷键 command + / : 添加代码注释//command + alt + / : 添加代码注释/ /control + alt + i : 快速调整缩进command + shift + v : 在剪切板选择粘贴command + d : 复制当前行command + delete : 删除当前行control + shift + j : 把下一行缩上来变成一行shift + enter/alt + command + enter : 快速向下/上折行command + shift + u : 大小写快速切换command + shift + [/] : 选项卡快速切换command + +/- : 代码块展开/收缩command + delete : delete one linealt + / : 代码补全command + , : open settingcommand + j : live templatescontrol + `(反引号) : switcher1control + tab : switch2command + p : 参数提示 导航快捷键: command + o : 快速查找类command + shift + o : 快速查找文件名alt + f7 : 找到继承该接口或者父级 的所有子类, 统计所有子类个数(find usage)command + l : 定位行,跳转行command + e : recent filecontrol + j : 获取函数或变量的相关信息command + y : 浮窗显示变量或函数声明信息f2/shift f2 : 切换到上一个/下一个错误位置alt + command + &lt;-/-&gt; : 上部/下部文件操作处f3/alt + f3 : 添加标签/带助记的标签command + f3 : 打开书签列表 搜索和替换: command + f : 当前文件搜索command + shift + f : 按路径搜索 command + r : 当前文件替换command + shift + r : 按路径替换 command + g : 下一个command + shift + g : 下一个 全局快捷键: 双击shift : 全局查找搜索command + 1,2,3,4,5 : 打开各种工具窗口 3. 常用插件live edit : 配合chrome,实现同步编辑(需要chrome安装JetBrains IDE Support插件)ideaVim : 开启vim模式的编辑器(tools-&gt;emulator),快捷键:alt+command+vplantuml : 画图(other setting中配置graphviz插件[http://www.graphviz.org/],最好用命令安装brew install graphviz)for example:123456789101112131415161718192021@startumldigraph test &#123; label = \"测试一下下\" start [label=\"开始游戏\" shape=circle style=filled] ifwifi [label=\"判断是否是wifi\" shape=diamond] needupdate [label=\"是否有资源需要更新\" shape=diamond] startslientdl[label=\"静默下载\" shape=box] enterhall[label=\"进入游戏大厅\" shape=box] ' direction start -&gt; ifwifi ifwifi -&gt; needupdate[label=\"是\"] needupdate -&gt; startslientdl[label=\"是\"] startslientdl -&gt; enterhall needupdate -&gt; enterhall[label=\"否\"] ifwifi -&gt; enterhall[label=\"否\"]&#125;@enduml","tags":[]},{"title":"Hello World","date":"2018-06-27T02:00:29.000Z","path":"2018/06/27/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment文身断发 stormzhangblog.csdn.net/googdev/article/details/80765745","tags":[]},{"title":"读别让别人抢走你的时间有感","date":"2018-06-23T10:41:01.000Z","path":"2018/06/23/读别让别人抢走你的时间有感/","text":"写在前面:由于手机套餐即将在本月到期,于是去附近营业厅办理,没想到周围的营业厅并不是很正规,都不给办理3元最低套餐,在这期间花费了大量时间,回来后非常懊恼,在用hexo建站过程中无意间发现了这篇文章,如获至宝,现把作者的精华总结于此. 总结: 你与同龄人之间的差距,之所以差距越来越大,就在于对时间的利用上; 钱能省就省,但前提是不占用我的时间,因为我的时间是很宝贵的; 不要让行动出卖你自认为时间不值钱的意识; 一定要有原则,有一必有二,有二必有三,违背原则的每一件小事都要坚决抵触; 穷人思维总想着花时间省钱,但是当你接触过一些成功人士之后,他们的富人思维永远是花钱省时间； 买东西不要冲着便宜、优惠而买，要冲着自己是否需要而买，不需要的东西，再便宜买了也无用，只会徒增累赘，自己需要的东西，应该果断立刻就买； 真正的自制力不是试图战胜自己的人性,而是远离这种挑战. stormzhang","tags":[]},{"title":"优雅的写php代码","date":"2018-06-21T16:42:38.000Z","path":"2018/06/22/优雅的写php代码/","text":"1. 遍历数组获取新的数据结构1234567891011121314151617181920212223242526272829$arr = [ 'test1' =&gt; 'John', 'test2' =&gt; 'Jerry', 'test3' =&gt; 'Marry',];//方式一:传统方式(不推荐):增加内存开销$tmp = [];foreach($arr as $key =&gt; $val) &#123; if (in_array($val, ['John', 'Jerry'], true)) &#123; $val = 'Anker'; &#125; $tmp[$key] = $val;&#125;//方式二:foreach($arr as $key =&gt; $val) &#123; if ($val === 'John' || $val === 'Jerry') &#123; $arr[$key] = 'Anker'; &#125;&#125;//方式三:引用(代码简洁,节省内存空间)foreach($arr as $key =&gt; &amp;$val) &#123; if (in_array($val, ['John', 'Jerry'], true)) &#123; $val = 'Anker'; &#125;&#125;unset($val); 2.ajax返回错误状态使用try…catch…下面有段逻辑: 123456789101112131415161718192021222324252627282930313233343536373839class UserModel&#123; public function login($username = '', $password = '') &#123; code... if (...) &#123; // 用户不存在 return -1; &#125; code... if (...) &#123; // 密码错误 return -2; &#125; code... &#125;&#125;class UserController&#123; public function login($username = '', $password = '') &#123; $model = new UserModel(); $res = $model-&gt;login($username, $password); if ($res === -1) &#123; return [ 'code' =&gt; '404', 'message' =&gt; '用户不存在' ]; &#125; if ($res === -2) &#123; return [ 'code' =&gt; '400', 'message' =&gt; '密码错误' ]; &#125; code... &#125;&#125; 使用try…catch…改写后: 12345678910111213141516171819202122232425262728293031323334353637class UserModel&#123; public function login($username = '', $password = '') &#123; code... if (...) &#123; // 用户不存在 throw new Exception('用户不存在', '404'); &#125; code... if (...) &#123; // 密码错误 throw new Exception('密码错误', '400'); &#125; code... &#125;&#125;class UserController&#123; public function login($username = '', $password = '') &#123; try &#123; $model = new UserModel(); $res = $model-&gt;login($username, $password); // 如果需要的话，我们可以在这里统一commit数据库事务 // $db-&gt;commit(); &#125; catch (Exception $e) &#123; // 如果需要的话，我们可以在这里统一rollback数据库事务 // $db-&gt;rollback(); return [ 'code' =&gt; $e-&gt;getCode(), 'message' =&gt; $e-&gt;getMessage() ] &#125; &#125;&#125;","tags":[]}]