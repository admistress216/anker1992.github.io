[{"title":"mysql问答","date":"2018-06-28T02:12:46.000Z","path":"2018/06/28/mysql问答/","text":"mysql中emoji表情,不常用的汉子,任何新增的unicode怎么保存?答: 选用utf8mb4编码(4字节宽字符)格式而不是用utf编码.","tags":[]},{"title":"phpstorm","date":"2018-06-27T02:11:38.000Z","path":"2018/06/27/phpstorm/","text":"1. 目的记录和练习的目的,旨在提升工作效率,加快开发节奏与流畅度. 2. 常用快捷键编辑快捷键 command + / : 添加代码注释//command + alt + / : 添加代码注释/ /control + alt + i : 快速调整缩进command + shift + v : 在剪切板选择粘贴command + d : 复制当前行command + delete : 删除当前行control + shift + j : 把下一行缩上来变成一行shift + enter/alt + command + enter : 快速向下/上折行command + shift + u : 大小写快速切换command + shift + [/] : 选项卡快速切换command + +/- : 代码块展开/收缩command + shift + f : find in pathcommand + f/r : find/replacecommand + delete : delete one linealt + / : 代码补全command + , : open settingcommand + j : live templatescontrol + `(反引号) : switcher1control + tab : switch2 导航快捷键: command + o : 快速查找类command + shift + o : 快速查找文件名alt + f7 : 找到继承该接口或者父级 的所有子类, 统计所有子类个数(find usage)command + l : 定位行,跳转行command + e : recent filecontrol + j : 获取函数或变量的相关信息command + y : 浮窗显示变量或函数声明信息f2/shift f2 : 切换到上一个/下一个错误位置alt + command + &lt;-/-&gt; : 上部/下部文件操作处f3/alt + f3 : 添加标签/带助记的标签command + f3 : 打开书签列表 搜索和替换: command + f : 当前文件搜索command + shift + f : 按路径搜索 command + r : 当前文件替换command + shift + r : 按路径替换 command + g : 下一个command + shift + g : 下一个 全局快捷键: 双击shift : 全局查找搜索command + 1,2,3,4,5 : 打开各种工具窗口 3. 常用插件live edit : 配合chrome,实现同步编辑(需要chrome安装JetBrains IDE Support插件)ideaVim : 开启vim模式的编辑器(tools-&gt;emulator),快捷键:alt+command+vplantuml : 画图(other setting中配置graphviz插件[http://www.graphviz.org/],最好用命令安装brew install graphviz)for example:123456789101112131415161718192021@startumldigraph test &#123; label = \"测试一下下\" start [label=\"开始游戏\" shape=circle style=filled] ifwifi [label=\"判断是否是wifi\" shape=diamond] needupdate [label=\"是否有资源需要更新\" shape=diamond] startslientdl[label=\"静默下载\" shape=box] enterhall[label=\"进入游戏大厅\" shape=box] ' direction start -&gt; ifwifi ifwifi -&gt; needupdate[label=\"是\"] needupdate -&gt; startslientdl[label=\"是\"] startslientdl -&gt; enterhall needupdate -&gt; enterhall[label=\"否\"] ifwifi -&gt; enterhall[label=\"否\"]&#125;@enduml","tags":[]},{"title":"Hello World","date":"2018-06-27T02:00:29.000Z","path":"2018/06/27/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment文身断发 stormzhangblog.csdn.net/googdev/article/details/80765745","tags":[]},{"title":"读别让别人抢走你的时间有感","date":"2018-06-23T10:41:01.000Z","path":"2018/06/23/读别让别人抢走你的时间有感/","text":"写在前面:由于手机套餐即将在本月到期,于是去附近营业厅办理,没想到周围的营业厅并不是很正规,都不给办理3元最低套餐,在这期间花费了大量时间,回来后非常懊恼,在用hexo建站过程中无意间发现了这篇文章,如获至宝,现把作者的精华总结于此. 总结: 你与同龄人之间的差距,之所以差距越来越大,就在于对时间的利用上; 钱能省就省,但前提是不占用我的时间,因为我的时间是很宝贵的; 不要让行动出卖你自认为时间不值钱的意识; 一定要有原则,有一必有二,有二必有三,违背原则的每一件小事都要坚决抵触; 穷人思维总想着花时间省钱,但是当你接触过一些成功人士之后,他们的富人思维永远是花钱省时间； 买东西不要冲着便宜、优惠而买，要冲着自己是否需要而买，不需要的东西，再便宜买了也无用，只会徒增累赘，自己需要的东西，应该果断立刻就买； 真正的自制力不是试图战胜自己的人性,而是远离这种挑战. stormzhang","tags":[]},{"title":"优雅的写php代码","date":"2018-06-21T16:42:38.000Z","path":"2018/06/22/优雅的写php代码/","text":"1. 遍历数组获取新的数据结构1234567891011121314151617181920212223242526272829$arr = [ 'test1' =&gt; 'John', 'test2' =&gt; 'Jerry', 'test3' =&gt; 'Marry',];//方式一:传统方式(不推荐):增加内存开销$tmp = [];foreach($arr as $key =&gt; $val) &#123; if (in_array($val, ['John', 'Jerry'], true)) &#123; $val = 'Anker'; &#125; $tmp[$key] = $val;&#125;//方式二:foreach($arr as $key =&gt; $val) &#123; if ($val === 'John' || $val === 'Jerry') &#123; $arr[$key] = 'Anker'; &#125;&#125;//方式三:引用(代码简洁,节省内存空间)foreach($arr as $key =&gt; &amp;$val) &#123; if (in_array($val, ['John', 'Jerry'], true)) &#123; $val = 'Anker'; &#125;&#125;unset($val); 2.ajax返回错误状态使用try…catch…下面有段逻辑: 123456789101112131415161718192021222324252627282930313233343536373839class UserModel&#123; public function login($username = '', $password = '') &#123; code... if (...) &#123; // 用户不存在 return -1; &#125; code... if (...) &#123; // 密码错误 return -2; &#125; code... &#125;&#125;class UserController&#123; public function login($username = '', $password = '') &#123; $model = new UserModel(); $res = $model-&gt;login($username, $password); if ($res === -1) &#123; return [ 'code' =&gt; '404', 'message' =&gt; '用户不存在' ]; &#125; if ($res === -2) &#123; return [ 'code' =&gt; '400', 'message' =&gt; '密码错误' ]; &#125; code... &#125;&#125; 使用try…catch…改写后: 12345678910111213141516171819202122232425262728293031323334353637class UserModel&#123; public function login($username = '', $password = '') &#123; code... if (...) &#123; // 用户不存在 throw new Exception('用户不存在', '404'); &#125; code... if (...) &#123; // 密码错误 throw new Exception('密码错误', '400'); &#125; code... &#125;&#125;class UserController&#123; public function login($username = '', $password = '') &#123; try &#123; $model = new UserModel(); $res = $model-&gt;login($username, $password); // 如果需要的话，我们可以在这里统一commit数据库事务 // $db-&gt;commit(); &#125; catch (Exception $e) &#123; // 如果需要的话，我们可以在这里统一rollback数据库事务 // $db-&gt;rollback(); return [ 'code' =&gt; $e-&gt;getCode(), 'message' =&gt; $e-&gt;getMessage() ] &#125; &#125;&#125;","tags":[]}]